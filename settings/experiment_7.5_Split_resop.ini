# ------------------------------------------------

######## ##          ##  ####  ######  ##    ##
##       ##          ## ##  ##   ##   ####  ####
##        ##        ##  ##  ##   ##   ## #### ##
##        ##   ##   ## ########  ##  ##   ##   ##
##         ## #### ##  ##    ##  ##  ##        ##
##         ####  #### ##      ## ## ##          ##
##########  ##    ##  ##      ## ## ##          ##

# Community Water Model Version 0.99
# SETTINGS FILE
# ------------------------------------------------

# for Python 3.7 - no changes in the settings file
# Python 3 only reacts on doubling statements
# e.g. Python 2 works (9and takes the last)
# StepEnd = 31/12/2010
# Step End = 10
# Python 3 will not run and will complain about two StepEnds 

[OPTIONS]
#-------------------------------------------------------
# OPTION - to switch on/off
#-------------------------------------------------------

# Data otions
# if temperature is stored in Kelvin instead Celsius
# !!! here in Celcius
TemperatureInKelvin = False
# if lat/lon the area has to be user defined = precalculated
gridSizeUserDefined = True

#-----------------------------------------------
# Evaporation: calculate pot. evaporation (True) or use precalculated pot.evaporation map stacks (False)
calc_evaporation = False

# Method to calculate potential evaporation (default = 1)
# 1: Penman Monteith (is used if PET_modus is missing)
# 2: Milly and Dunne (Energy only PET = 0.8(Rn âˆ’G) )
# 3: Yang et al. Penman Montheith correction method
# 4: Priestley-Taylor 
PET_modus = 1

#-----------------------------------------------
# Irrigation and water demand

# if irrigation is included, otherwise paddy and non paddy is put into 'grassland'
includeIrrigation = True
# if water demand from irrigation, industry and domestic is included
includeWaterDemand = True
# Water allocation
# if water demand and availability is calculated for region to compare demand vs. avail
usingAllocSegments = False
# limit abstraction to available groundwater (True) include fossil groundwater (False)
limitAbstraction = True

zonal_abstraction = False

reservoir_transfers = True

using_lift_areas = True

# Environmental Flow
calc_environflow = False
#Sector- source-abstraction fractions are specified, in WATERDEMAND
includeIndusDomesDemand = False
sectorSourceAbstractionFractions = True
using_reservoir_command_areas = True
reservoir_releases_in_Excel_settings = True

#-----------------------------------------------
# Soil 
# use preferential flow, that bypasses the soil matrix and drains directly to the groundwater (not for irrPaddy)
preferentialFlow = True
# Capillar rise
CapillarRise = True

#-----------------------------------------------
# Routing

# if runoff concentration to the edge of a cell is included
includeRunoffConcentration = False
# Waterbodies like lakes and reservoirs
includeWaterBodies = True
# kinematic wave routing, if False no routing is calculated
includeRouting = True

#-----------------------------------------------
# Inflow from outside of the modelled area
inflow = False
waterquality = False

# --- Reporting & Debugging ------------------- ----------------------------------------------
# Reporting options
writeNetcdfStack = True
reportMap = True
reportTss = True
# Checking water balance (for debugging)
calcWaterBalance = False
sumWaterBalance = False

#-------------------------------------------------------
# DEFINITIONS OF PARAMETERS
#-------------------------------------------------------

#-------------------------------------------------------
[FILE_PATHS]
#-------------------------------------------------------
PathSystem = D:
PathRoot = D:\CWatM_models\CWatM-Ebro-1km
PathOut = D:\CWatM_models\experiment_7.5_Split_resop
#PathOut = D:\CWatM_models\CWatM_Ebro1km_output_SAIH
#PathOut = D:\CWatM_models\CWatM_Ebro1km_output_Rhiannon
PathInit = $(PathRoot)/init
PathMaps = $(PathRoot)/input_netcdf
PathWaterdemand = $(PathMaps)/landsurface/waterDemand
PathMeteo = D:\CWatM_models\meteo_EMO5

#-------------------------------------------------------
[NETCDF_ATTRIBUTES]
institution = IIASA
title = European Water Model - Ebro 1km
metaNetcdfFile = $(FILE_PATHS:PathRoot)/metaNetcdf.xml
# Volume/Release ratios as calculated with observations
#Excel_settings_file = $(FILE_PATHS:PathRoot)\settings\cwatm_settings.xlsx
# Half Volume/Release ratios as calculated with observations
Excel_settings_file = $(FILE_PATHS:PathRoot)\settings\cwatm_settings_5.xlsx
#-------------------------------------------------------
# AREA AND OUTLETS
#-------------------------------------------------------
[MASK_OUTLET]

# Area mask
# A pcraster map, tif or netcdf map e.g.  $(FILE_PATHS:PathRoot)/data/areamaps/area_indus.map
# or a retancle: Number of Cols, Number of rows, cellsize, upper left corner X, upper left corner Y 
#MaskMap = 3548500 2005500
MaskMap = $(FILE_PATHS:PathMaps)/basin2.tif

#-------------------------------------------------------
# Station data
# either a map e.g. $(FILE_PATHS:PathRoot)/data/areamaps/area3.map
# or a location coordinates (X,Y) e.g. 5.75 52.25 9.25 49.75 )
# Tortosa
# Gauges = 3519921 2018532
# Rhiannon gauges 1
# Gauges = 3351428.882	2195587.194	3334919.071	2211344.62	3179551.878	2314445.679	3266408.848	2254424.321	3447533.167	2085383.671	3301477.643	2234396.458	3309582.621	2231570.246	3225235.692	2303542.935	3231358.875	2284832.132	3374750.542	2162780.062	3260263.853	2267332.895	3222418.067	2297424.975	3256353.042	2278528.172	3223426.623	2278586.704	3279510.342	2242507.292	3197928.174	2288424.764	3413481.963	2125468.898	3256199.154	2208439.093	3279500.02	2196889.202	3356367.869	2176675.876	3342980.231	2162561.561	3331442.44	2101464.112	3346576.255	2099536.921	3332625.071	2094912.259	3364379.705	2117404.979	3420661.226	2051188.013	3459721.804	2037716.969	3448752.4	2022864.586	3480864.885	2059475.021	3487608.562	2023435.238	3508456.548	2068047.57	3520571.1	2035556.927	3519846.826	2018559.582	3535560.403	2051500.976	3493594.647	2089100.589	3549744.742	2112350.416	3557809.281	2124441.197	3566494.928	2150477.898	3600034.346	2151383.35	3519329.455	2164971.043	3546189.173	2147515.571	3538559.339	2135533.268	3473845.808	2128845.691	3503357.317	2156304.273	3432757.925	2183193.963	3477296.648	2238093.268	3477818.566	2236644.037	3513909.231	2186403.047	3436653.514	2204767.957	3438574.406	2173546.248	3472601.668	2184021.023	3511650.174	2105715.333	3404423.579	2235520.414	3399459.547	2181319.961	3397630.846	2230049.863	3363467.31	2213835.591	3392519.087	2258972.624	3343625.357	2256349.431	3383159.645	2279148.939	3338545.564	2246639.96	3349612.214	2230344.713	3290750.177	2292587.046	3294103.171	2289303.284
# Rhiannon gauges 2
#Gauges = 3351429 2195587	3334919	2211345	3179552	2314446	3266409	2254424	3447533	2085384	3301478	2234396	3309583	2231570	3225236	2303543	3231359	2284832	3374751	2162780	3260264	2267333	3222418	2297425	3256353	2278528	3223427	2278587	3279510	2242507	3197928	2288425	3413482	2125469	3256199	2208439	3279500	2196889	3356368	2176676	3342980	2162562	3331442	2101464	3346576	2099537	3332625	2094912	3364380	2117405	3420434	2050869	3459722	2037717	3448752	2022865	3480593	2059703	3487609	2023435	3508457	2068048	3520571	2035557	3519847	2018560	3535560	2051501	3493595	2089101	3549745	2112350	3557809	2124441	3564117	2135201	3590353	2136164	3519329	2164971	3546189	2147516	3538559	2135533	3473846	2128846	3503357	2156304	3432758	2183194	3475865	2233234	3513733	2169313	3436654	2204768	3438574	2173546	3472602	2184021	3511650	2105715	3404424	2235520	3399460	2181320	3397631	2230050	3363467	2213836	3392519	2258973	3343625	2256349	3383160	2279149	3338546	2246640	3349612	2230345	3291439	2293159	3294103	2289303	3273369	2274342	3186971	2316616	3380219	2149900	3280136	2195929	3342038	2163060	3254434	2208433	3332455	2094285	3420287	2049638	3459616	2037367	3479681	2058742	3447725	2021190	3487167	2022692	3496119	2086289	3512508	2066953	3563445	2135429	3566453	2153172	3573286	2167235	3600309	2151813	3590376	2136164	3520256	2165461	3557691	2183450	3542711	2145996	3538646	2135536	3476935	2241050	3475887	2233222	3513637	2187214	3513857	2169193	3438335	2174805	3472902	2184317	3406196	2235444	3344036	2255700	3383141	2279683	3392696	2259090	3293637	2296235	3291031	2293237	3293955	2289512
# SAIH gauges 
#Gauges = 3261505 2267489 3338370 2219357 3349445 2210935 3362194 2212126 3414868 2127436 3432534 2182574 3616378 2179718 3616833 2178762 3519470 2089471 3178331 2313686 3519530 2018634 3395552 2238453 3556499 2123497 3318192 2227601 3528514 2059156 3347996 2103473 3299572 2236604 3428437 2229706 3361562 2181161 3179469 2314490 3506675 2082446 3516524 2067528 3255521 2208537 3332520 2095487 3459537 2037634 3404479 2235552 3439398 2175464 3513536 2186576 3513537 2168644 3538702 2135712 3600511 2151540
# Extended gauges to include all reservoirs with a release curve
Gauges = 3261505 2267489 3338370 2219357 3349445 2210935 3362194 2212126 3414868 2127436 3432534 2182574 3616378 2179718 3616833 2178762 3519470 2089471 3178331 2313686 3519530 2018634 3395552 2238453 3556499 2123497 3318192 2227601 3528514 2059156 3347996 2103473 3299572 2236604 3428437 2229706 3361562 2181161 3179469 2314490 3506675 2082446 3516524 2067528 3255521 2208537 3332520 2095487 3459537 2037634 3404479 2235552 3439398 2175464 3513536 2186576 3513537 2168644 3538702 2135712 3600078 2151572 3526694 2064445 3251625 2277997 3279607 2196796 3303072 2113297 3340796 2128965 3275785 2206940 3395006 2103877 3392240 2089790 3411808 2074003 3420444 2050918 3449024 2023299 3442391 2035688 3487556 2023386 3480715 2059578 3383145 2279210 3293475 2288841 3290885 2292629 3344201 2255536 3412113 2276283 3475890 2233108 3437351 2205161 3432863 2183268 3476939 2240633 3542778 2047532 3519475 2164922 3557661 2182659 3542292 2145510 3569675 2164850 3566528 2150572 3564206 2135209 3559279 2129628 3562106 2210274 3556855 2211216 3558282 2062458 3324151 2282457 3392810 2258700 3589923 2135636
# if .tif file for gauges, this is a flag if the file is global or local
# e.g. Gauges = $(FILE_PATHS:PathRoot)/data/areamaps/gaugesRhine.tif
GaugesLocal = True

#-------------------------------------------------------
[TIME-RELATED_CONSTANTS]
#-------------------------------------------------------

# StepStart has to be a date e.g. 01/06/1990
# SpinUp or StepEnd either date or numbers 
# SpinUp: from this date output is generated (up to this day: warm up)
StepStart = 01/01/1990
SpinUp = none
StepEnd =  31/12/2012

#-------------------------------------------------------
[INITITIAL CONDITIONS]
#-------------------------------------------------------

# for a warm start initial variables a loaded
# e.g for a start on 01/01/2010 load variable from 31/12/2009
load_initial = True
initLoad = $(FILE_PATHS:PathInit)/Ebro1km_20121231.nc

# saving variables from this run, to initiate a warm start next run
# StepInit = saving date, can be more than one: 10/01/1973 20/01/1973
save_initial = False
initSave = $(FILE_PATHS:PathInit)/Ebro1km
StepInit = 31/12/2012

#-------------------------------------------------------
# CALIBARTION PARAMETERS
#-------------------------------------------------------
[CALIBRATION]

# These are parameter which are used for calibration
# could be any parameter, but for an easier overview, tehey are collected here
# in the calibration template a placeholder (e.g. 0.01027609334053788eta) instead of value

SnowMeltCoef = 0.003015207321620553
#crop_correct =  2
#crop_correct =  1.0107256349989333
crop_correct = 1
crop_correct_forest = 0.7
crop_correct_grassland = 0.7
crop_correct_irrpaddy = 1.2
crop_correct_irrnonpaddy = 1.8

soildepth_factor = 0.8982311371401825
#soildepth_factor = 1.2
preferentialFlowConstant = 7.39061950454493
#preferentialFlowConstant = 5
arnoBeta_add = 0.693783236093227

factor_interflow = 1.0840530411999048
recessionCoeff_factor = 0.33711388766166395

manningsN = 0.2843828514743434
#manningsN = 0.5
normalStorageLimit = 0.6983218083973265
#MinOutflowQ = 0.2
MinOutflowQ = 0.1648117909838273
#conservativeStorageLimit = 0.1
conservativeStorageLimit = 0.2918843294026948

lakeAFactor = 1.2788442008289886
#lakeEvaFactor = %lakeEvaFactor
lakeEvaFactor =1.17

ksat_fact = 1.4280222123305635

thetas_fact = 1.0
reduceUrbanRunoff = 0.0
add_runoffInfiltrationCoeff = 0.0
######

#-------------------------------------------------------
# TOPOGRAPHY MAPS
#-------------------------------------------------------
[TOPOP]
# local drain direction map (1-9)
Ldd = $(FILE_PATHS:PathMaps)/routing/ldd.nc
# Elevation map used for downscaling meteo maps
Elevation = $(FILE_PATHS:PathMaps)/landsurface/topo/demmin.map
# Elevation standard deviation [m], i.e. altitude difference elevation within pixel.
# Used for sub-pixel modelling of snow accumulation and melt
ElevationStD = $(FILE_PATHS:PathMaps)/landsurface/topo/demstd.map

# Area of pixel [m2] (for lat/lon every cell has a different area)
CellArea = $(FILE_PATHS:PathMaps)/landsurface/topo/cellarea.map

#-------------------------------------------------------
# INPUT METEOROLOGICAL TIMESERIES AS MAPS
#-------------------------------------------------------
[METEO]

# if meteo maps have the same scale than all the other maps e.g. 0.5 deg
meteomapssamescale = False
downscale_wordclim_tavg = $(FILE_PATHS:PathMaps)/meteo/worldclim_tavg.nc 
downscale_wordclim_tmin = $(FILE_PATHS:PathMaps)/meteo/worldclim_tmin.nc 
downscale_wordclim_tmax = $(FILE_PATHS:PathMaps)/meteo/worldclim_tmax.nc 
downscale_wordclim_prec = $(FILE_PATHS:PathMaps)/meteo/worldclim_prec.nc 
# if usemeteodownscaling = True (default if not set) meteo maps will be downscaled
# if usemeteodownscaling = False: meteomaps will be use as they come e.g. as 0.5 deg 
usemeteodownscaling = False 
# precipitation [kg m-2 s-1]
PrecipitationMaps = $(FILE_PATHS:PathMeteo)/pr_pen_*
#PrecipitationMaps = $(FILE_PATHS:PathMeteo)/pr_*
# average daily temperature [K]
TavgMaps = $(FILE_PATHS:PathMeteo)/EMO-5-tas_*

# ----------------------------------------
# This is used if calc_evaporation = False

# daily reference evaporation (free water) 
E0Maps = $(FILE_PATHS:PathMeteo)/EWRef_daily.nc
# daily reference evapotranspiration (crop) 
ETMaps = $(FILE_PATHS:PathMeteo)/ETRef_daily.nc
# this is true, if ET maps have the same resolution as pr maps
ETsamePr = False

# --------------------------------
# from kg m-2s-1 to m : 86.4
#precipitation_coversion = 86.4
# from MM to m : 0.001
precipitation_coversion = 0.001

#evaporation_coversion = 1.00
# from MM to m : 0.001
evaporation_coversion = 1.0

# OUTPUT maps and timeseries
#OUT_Dir = $(FILE_PATHS:PathOut)
#OUT_MAP_Daily = Precipitation

#-------------------------------------------------------
# CALCULATE EVAPORATION - PENMAN - MONTEITH
#-------------------------------------------------------
[EVAPORATION]

# This is used if calc_evaporation = True
# use albedo maps
albedo = False
albedoMaps = $(FILE_PATHS:PathMaps)/landsurface/albedo/albedo.nc 

# if not albedo maps use fixed albedo
# Albedo of bare soil surface (Supit et. al.)
AlbedoSoil = 0.15
# Albedo of water surface (Supit et. al.)
AlbedoWater = 0.05
# Albedo of vegetation canopy (FAO,1998)
AlbedoCanopy = 0.23



# ----------------------------
only_radiation = True
dem = $(FILE_PATHS:PathMaps)/landsurface/topo/dem_mean.tif
latitude = $(FILE_PATHS:PathMaps)/landsurface/topo/lat.tif


# radiation maps  [KJ m-2 day-1]
RGDMaps = $(FILE_PATHS:PathMeteo)/EMO-5-rg_*
# vapor pressure maps [hPa]
EActMaps = $(FILE_PATHS:PathMeteo)/EMO-5-pd_*

# use CO2 correction from Yang et al. 2019 -> CO2 concentration 
co2conc = $(FILE_PATHS:PathMaps)/RCP_CO2/rcp45.nc4

# use specific humidity (TRUE) QAir,  or relative humidity (FALSE) - rhs
useHuss = False

# map stacks Temperature [K}]
TminMaps = $(FILE_PATHS:PathMeteo)/EMO-5-tn_*
TmaxMaps = $(FILE_PATHS:PathMeteo)/EMO-5-tx_*
# Instantaneous surface pressure[Pa]
##PSurfMaps = $(FILE_PATHS:PathMeteo)/ps*
# 2 m istantaneous specific humidity[kg /kg] (QAir) or relative humidity [%] (rhs)
##RhsMaps = $(FILE_PATHS:PathMeteo)/hurs*
# wind speed maps at 10m [m/s]
WindMaps = $(FILE_PATHS:PathMeteo)/EMO-5-ws_*
# radiation surface downwelling shortwave maps  [W/m2]
##RSDSMaps = $(FILE_PATHS:PathMeteo)/rsds*
# radiation surface downwelling longwave maps [W/m2] [W/m2]
##RSDLMaps = $(FILE_PATHS:PathMeteo)/rlds*

# OUTPUT maps and timeseries
#OUT_Dir = $(FILE_PATHS:PathOut)
#OUT_MAP_Daily = ETRef, EWRef

#-------------------------------------------------------
[SNOW]
#-------------------------------------------------------

# Number of vertical Snow layers
NumberSnowLayers = 10
# up to which layer the ice melt is calculated with the middle temperature
GlacierTransportZone = 4

# Temperature lapse rate with altitude [deg C / m]
TemperatureLapseRate = 0.0065 
# Multiplier applied to precipitation that falls as snow
SnowFactor = 1.0
# Range [m C-1 d-1] of the seasonal variation, SnowMeltCoef is the average value
SnowSeasonAdj = 0.001
# Average temperature at which snow melts
TempMelt =1.0
# Average temperature below which precipitation is snow
TempSnow = 1.0
# Snow melt coefficient: default: 4.0 
# SRM: 0.0045 m/C/day ( = 4.50 mm/C/day), Kwadijk: 18 mm/C/month (= 0.59 mm/C/day)  
# See also Martinec et al., 1998.

# use in CALIBRATION -> copied to CALIBRATION
#SnowMeltCoef = 0.004
IceMeltCoef  = 0.007

#--------------------------------------------------------------
# INITIAL CONDITIONS - Initial snow depth in snow zone 1-7 [mm]  - SnowCoverIni

[FROST]
# Snow water equivalent, (based on snow density of 450 kg/m3) (e.g. Tarboton and Luce, 1996)
SnowWaterEquivalent = 0.45
# Daily decay coefficient, (Handbook of Hydrology, p. 7.28)
Afrost = 0.97
# Snow depth reduction coefficient, [cm-1], (HH, p. 7.28)
Kfrost = 0.57
# Degree Days Frost Threshold (stops infiltration, percolation and capillary rise)
# Molnau and Bissel found a value 56-85 for NW USA.
FrostIndexThreshold = 56

#--------------------------------------------------------------
# INITIAL CONDITIONS: FrostIndexIni

[VEGETATION]
cropgroupnumber = $(FILE_PATHS:PathMaps)/soil/cropgrp_1km.nc
#cropgroupnumber = 2.0
# soil water depletion fraction, Van Diepen et al., 1988: WOFOST 6.0, p.86, Doorenbos et. al 1978

#-------------------------------------------------------
[SOIL]
#-------------------------------------------------------

PathTopo = $(FILE_PATHS:PathMaps)/landsurface/topo
PathSoil1 =  $(FILE_PATHS:PathMaps)/soil

# Topography mapsNetcdf/maps
# tangent slope
tanslope = $(PathTopo)/tanslope.map

# maps of relative elevation above flood plains
relativeElevation = $(PathTopo)/dzRel_Europe_1km.nc

# Soil hydraulic properties

# soil (Rosetta pedotransfer function)
KSat1 = $(PathSoil1)/ksat1_1km.map
KSat2 = $(PathSoil1)/ksat2_1km.map
KSat3 = $(PathSoil1)/ksat3_1km.map
# Alpha: an Genuchtenâ€™s shape parameter
alpha1 = $(PathSoil1)/alpha1_1km.map
alpha2 = $(PathSoil1)/alpha2_1km.map
alpha3 = $(PathSoil1)/alpha3_1km.map
#Lambda: an Genuchtenâ€™s shape parameter = n-1-> n = lamda+1, m = 1 - (1/n)
lambda1 = $(PathSoil1)/lambda1_1km.map
lambda2 = $(PathSoil1)/lambda2_1km.map
lambda3 = $(PathSoil1)/lambda3_1km.map
# thetas  is the volumetric water content Î¸ saturated 
thetas1 = $(PathSoil1)/thetas1_1km.map
thetas2 = $(PathSoil1)/thetas2_1km.map
thetas3 = $(PathSoil1)/thetas3_1km.map
# thetar is the volumetric water content Î¸ residual 
thetar1 = $(PathSoil1)/thetar1_1km.map
thetar2 = $(PathSoil1)/thetar2_1km.map
thetar3 = $(PathSoil1)/thetar3_1km.map

percolationImp = $(PathSoil1)/percolationImp_1km.map

maxGWCapRise    = 5.0

minCropKC        = 0.2
minTopWaterLayer = 0.0

# Soil depth
StorDepth1 = $(PathSoil1)/soildepth1_1km.map
StorDepth2 = $(PathSoil1)/soildepth2_1km.map

# preferential flow (between 1.0 and 8.0)
# used in CALIBRATION -> copied to CALIBRATION
#preferentialFlowConstant = 4.0

#-------------------------------------------------------
[LANDCOVER]
PathLandcover = $(FILE_PATHS:PathMaps)/landsurface

coverTypes = forest, grassland, irrPaddy, irrNonPaddy, sealed, water
coverTypesShort = f, g, i, n, s, w
fractionLandcover = $(PathLandcover)/fractionLandcover_Europe.nc

# Landcover can vary from year to year
dynamicLandcover = True
# if landcover cannot vary, which year should be taken as fixed year
fixLandcoverYear = 1990

#-------------------------------------------------------

[__forest]
PathForest = $(FILE_PATHS:PathMaps)/landcover/forest
PathSoil1 =  $(FILE_PATHS:PathMaps)/soil

# Parameters for the Arno's scheme 
# arnoBeta is defined by orographic,+ land cover add + calibration add, the soil water capacity distribution is based on this 
# range [0.01 - 1.2]
forest_arnoBeta = 0.2

#forest_soil
forest_KSat1 = $(PathSoil1)/ksat1_1km.map
forest_KSat2 = $(PathSoil1)/ksat2_1km.map
forest_KSat3 = $(PathSoil1)/ksat3_1km.map
forest_alpha1 = $(PathSoil1)/alpha1_1km.map
forest_alpha2 = $(PathSoil1)/alpha2_1km.map
forest_alpha3 = $(PathSoil1)/alpha3_1km.map
forest_lambda1 = $(PathSoil1)/lambda1_1km.map
forest_lambda2 = $(PathSoil1)/lambda2_1km.map
forest_lambda3 = $(PathSoil1)/lambda3_1km.map
forest_thetas1 = $(PathSoil1)/thetas1_1km.map
forest_thetas2 = $(PathSoil1)/thetas2_1km.map
forest_thetas3 = $(PathSoil1)/thetas3_1km.map
forest_thetar1 = $(PathSoil1)/thetar1_1km.map
forest_thetar2 = $(PathSoil1)/thetar2_1km.map
forest_thetar3 = $(PathSoil1)/thetar3_1km.map

# other paramater values
forest_minInterceptCap  = 0.001
forest_cropDeplFactor   = 0.0
forest_rootFraction1 = $(PathForest)/rootFraction1.map
forest_maxRootDepth  = $(PathForest)/maxRootDepth.map
forest_cropCoefficientNC = $(PathForest)/cropCoefficientForest_10days_original.nc
forest_interceptCapNC    = $(PathForest)/interceptCapForest_10days.nc


[__grassland]
PathGrassland = $(FILE_PATHS:PathMaps)/landcover/grassland

# Parameters for the Arno's scheme: 
grassland_arnoBeta = 0.0
# arnoBeta is defined by orographic,+ land cover add + calibration add, the soil water capacity distribution is based on this
# range [0.01 - 1.2]

# other paramater values
grassland_minInterceptCap  = 0.001
grassland_cropDeplFactor   = 0.0
grassland_rootFraction1 = $(PathGrassland)/rootFraction1.map
grassland_maxRootDepth  = $(PathGrassland)/maxRootDepth.map
grassland_cropCoefficientNC = $(PathGrassland)/cropCoefficientGrassland_10days_original.nc
grassland_interceptCapNC    = $(PathGrassland)/interceptCapGrassland_10days.nc

[__irrPaddy]
PathIrrPaddy = $(FILE_PATHS:PathMaps)/landcover/irrPaddy

# Parameters for the Arno's scheme:
irrPaddy_arnoBeta = 0.2
# arnoBeta is defined by orographic,+ land cover add + calibration add, the soil water capacity distribution is based on this
# range [0.01 - 1.2]

# other paramater values
irrPaddy_minInterceptCap  = 0.001
irrPaddy_cropDeplFactor   = 0.0
irrPaddy_rootFraction1 = $(PathIrrPaddy)/rootFraction1.map
irrPaddy_maxRootDepth  = $(PathIrrPaddy)/maxRootDepth.map
irrPaddy_cropCoefficientNC = $(PathIrrPaddy)/cropCoefficientirrPaddy_10days_original.nc
# maximum flooding depth for paddy
irrPaddy_maxtopwater = 0.05


[__irrNonPaddy]
PathIrrNonPaddy = $(FILE_PATHS:PathMaps)/landcover/irrNonPaddy

# Parameters for the Arno's scheme:
irrNonPaddy_arnoBeta = 0.2
# arnoBeta is defined by orographic,+ land cover add + calibration add, the soil water capacity distribution is based on this
# range [0.01 - 1.2]

# other paramater values
irrNonPaddy_minInterceptCap  = 0.001
irrNonPaddy_cropDeplFactor   = 0.0
irrNonPaddy_fracVegCover  = $(PathIrrNonPaddy)/fracVegCover.map
irrNonPaddy_rootFraction1 = $(PathIrrNonPaddy)/rootFraction1.map
irrNonPaddy_maxRootDepth  = $(PathIrrNonPaddy)/maxRootDepth.map
irrNonPaddy_cropCoefficientNC = $(PathIrrNonPaddy)/cropCoefficientirrNonPaddy_10days_original.nc

[__sealed]
PathSealed = $(FILE_PATHS:PathMaps)/landcover/sealed
sealed_minInterceptCap  = 0.001


[__open_water]
PathWater = $(FILE_PATHS:PathMaps)/landcover/water
water_minInterceptCap  = 0.0

#-------------------------------------------------------
[GROUNDWATER]
#-------------------------------------------------------

PathGroundwater = $(FILE_PATHS:PathMaps)/groundwater

recessionCoeff = $(PathGroundwater)/k_v20_1km.nc
# baseflow = recessionCoeff * storage groundwater
specificYield = $(PathGroundwater)/Europe_porosity_1km_GLHYMPS.nc
kSatAquifer = $(PathGroundwater)/k_v20_1km.nc
# both not used at the moment in groundwater modul, but already loaded
leakageriver_permea = 0.0


#-------------------------------------------------------
[WATERDEMAND]
#-------------------------------------------------------

# For water demand vs. availability: areas have to be aggregated
# Allocation map
allocSegments = $(FILE_PATHS:PathWaterdemand)/catchx.nc
reservoir_command_areas =  $(FILE_PATHS:PathMaps)/routing/lakereservoirs/IrrCZone.tif
lift_areas =  $(FILE_PATHS:PathWaterdemand)/lift_areas.tif

# Demand in m/day [True] (default) or as mio m3 per year or month [False]
demand_unit = False

# Demand data monthly or yearly, as  m day-1 or mio m3 per month
domesticWaterDemandFile = $(FILE_PATHS:PathWaterdemand)/historical_dom_month_millionm3_5min_1961_2010.nc
# time = True for monthly, False for yearly
domesticTimeMonthly = True
# name of the variable Withrawal = Gross, consumption = Netto
domesticWithdrawalvarname = domWW
domesticConsuptionvarname = domCon

industryWaterDemandFile = $(FILE_PATHS:PathWaterdemand)/historical_ind_year_millionm3_5min_1961_2010.nc
industryTimeMonthly = False
industryWithdrawalvarname = indWW
industryConsuptionvarname = indCon

uselivestock = True
livestockWaterDemandFile = $(FILE_PATHS:PathWaterdemand)/historical_liv_month_millionm3_5min_1961_2010.nc
#livestockWaterDemandFile = $(PathWaterdemand)/livestockWaterDemand.nc
livestockTimeMonthly = True  
livestockvarname = livestockConsumption

# using environmental flow (EF) (per month) as input value
# EF will be treated as one part of overall water demand
use_environflow = False
EnvironmentalFlowFile = $(FILE_PATHS:PathOut)/MQ90_12month.nc

#irrNonPaddy_efficiency = $(FILE_PATHS:PathMaps)/landsurface/waterDemand/efficiency.nc
#irrPaddy_efficiency = $(FILE_PATHS:PathMaps)/landsurface/waterDemand/efficiency.nc

irrNonPaddy_efficiency = 0.7
irrPaddy_efficiency = 0.6
irrigation_returnfraction = 0.7

swAbstractionFraction_Channel_Domestic = 1
swAbstractionFraction_Channel_Livestock = 1
swAbstractionFraction_Channel_Industry = 1
swAbstractionFraction_Channel_Irrigation = 0

swAbstractionFraction_Lift_Domestic = 0
swAbstractionFraction_Lift_Livestock = 0
swAbstractionFraction_Lift_Industry = 0
swAbstractionFraction_Lift_Irrigation = 1

swAbstractionFraction_Lake_Domestic = 0
swAbstractionFraction_Lake_Livestock = 0
swAbstractionFraction_Lake_Industry = 0
swAbstractionFraction_Lake_Irrigation = 0

swAbstractionFraction_Res_Domestic = 1
swAbstractionFraction_Res_Livestock = 1
swAbstractionFraction_Res_Industry = 1
swAbstractionFraction_Res_Irrigation = 1

gwAbstractionFraction_Domestic = 0
gwAbstractionFraction_Livestock = 0
gwAbstractionFraction_Industry = 0
gwAbstractionFraction_Irrigation = 0

# ------------------------------------------------------------------
# Estimate of fractions of groundwater and surface water abstractions
# Either a fixed fraction for surface water abstration
# based on fraction of average baseflow and upstream average discharge 
# if swAbstractionFrac < 0: fraction is taken from baseflow / discharge 
# if swAbstractionFrac > 0 this value is taken as a fixed value 
swAbstractionFrac = 0.9

averageDischarge = $(FILE_PATHS:PathOut)/discharge_totalavg.nc
# in [m3/s]
averageBaseflow  = $(FILE_PATHS:PathOut)/baseflow_totalavg.nc
# in [m]
baseflowInM = True
# if baseflow is in [m] instead of [m3/s] it will be converted [TRUE]. If [False] it will be not converted
# -------------------------
# Water Allocation
# Buffer around lakes and reservoirs - water is taken not only from water cells but from
# a rectangular (e.g. 1,3 or 5 please odd numbers) around a waterbody cell
buffer_waterbodies = 3
# Water is taken from surface and groundwater from neighbioring cells, if water is insufficient
# how many cells form a allocation area (e.g. 1,2,3...)
allocation_area = 10
# Farmers do not irrigated to field capacity but to a fraction of it
alphaDepletion = 0.7

# ------------------------------------------------------------------

#-------------------------------------------------------
# RUNOFF CONCENTRATION
#-------------------------------------------------------
[RUNOFF_CONCENTRATION]

# using triagular weigthning method
# the bigger the factor, more lag time 
forest_runoff_peaktime = 1.0
grassland_runoff_peaktime = 0.5
irrPaddy_runoff_peaktime = 0.5
irrNonPaddy_runoff_peaktime = 0.5
sealed_runoff_peaktime = 0.15 
water_runoff_peaktime = 0.01

interflow_runoff_peaktime =1.0
baseflow_runoff_peaktime = 2.0


runoffConc_factor = 1.0
# initial conditions:
# here only 1 layer is shown, but there are up to 10: runoff_concIni


#-------------------------------------------------------
# ROUTING MAPS and PARAMETERSD
#-------------------------------------------------------
[ROUTING]

PathRouting = $(FILE_PATHS:PathMaps)/routing

# Number of substep per day
# should be 10 for 0.5 deg but 24 for 0.1 deg

NoRoutingSteps = 24
#kinematic wave parameter: 0.6 is for broad sheet flow
chanBeta = 0.6

# Channel gradient (fraction, dy/dx)
chanGrad = $(PathRouting)/kinematic/changrad.nc
# Minimum channel gradient (for kin. wave: slope cannot be 0)
chanGradMin = 0.0001

#Channel Manning's n
chanMan = $(PathRouting)/kinematic/chanman.nc
#Channel length [meters]
chanLength = $(PathRouting)/kinematic/chanleng.nc
#Channel bottom width [meters]
chanWidth = $(PathRouting)/kinematic/chanbw.nc
#Bankfull channel depth [meters]
chanDepth = $(PathRouting)/kinematic/chanbnkf.nc

# initial conditions: channelStorageIni, riverbedExchangeIni, dischargeIni  

#-------------------------------------------------------
# LAKES AND RESERVOIRS
#-------------------------------------------------------
[LAKES_RESERVOIRS]

PathLakesRes = $(FILE_PATHS:PathMaps)/routing/lakereservoirs

# Use reservoirs and lakes (otherwise use only lakes Lake ID=1 and 3 => natural conditions)
useResAndLakes = True
# Reservoirs do have a year of implementation
dynamicLakesRes = True
# if Reservoirs does not have a year of implemtation, which year should be taken as fixed year
fixLakesResYear = 1990


#----------------------------
#Big lakes and Reservoirs

# ID of every lake, reservoir from HydroLakes database
waterBodyID = $(PathLakesRes)/lakeresID.tif
# 1 for lake, 2 for reservoir, 3 for lake and reservoir
waterBodyTyp = $(PathLakesRes)/lakeresType.tif
# Avergae discharge from HydroLakes Database
waterBodyDis = $(PathLakesRes)/lakeresDis.tif

# Lakes surface area from HydroLakes Database 
waterBodyArea = $(PathLakesRes)/lakeresArea.tif
# a factor to scale the outlet of a lake
#lakeAFactor = 1.0  -> calibration

#----------------------------
# Small lakes and reservoirs

useSmallLakes = False

smallLakesRes = $(PathLakesRes)/smallLakesRes.nc
smallwaterBodyDis = $(PathLakesRes)/smallLakesResDis.nc

# averageRunoff in [m] (if not given smallwaterBodyDis is taken instead)
#averageRunoff  = $(FILE_PATHS:PathOut)/runoff_totalavg_cali.nc

# initial conditions: lakeInflowIni, lakeStorageIni, outLakeIni, lakeOutflowIni, reservoirStorageIni 

#------------------
# Reservoirs
# reservoir volume from HydroLakes database
waterBodyVolRes = $(PathLakesRes)/lakeresVolRes.tif
# reservoir starting year from HydroLakes database 
waterBodyYear = $(PathLakesRes)/lakeresYear.tif

#  Conservative, normal and flood storage limit (fraction of total storage, [-])
#conservativeStorageLimit = 0.1
#normalStorageLimit = 0.5   # --> put into calibration
floodStorageLimit = 1
# adjusting the balance between normal and flood storage
# [0 ..1]  0: NormalstorageLimit      1: (= closer to flood) results in keeping the normal qoutflow longer constant
adjust_Normal_Flood = 0.5

# Minimum, Normal and Non-damaging reservoir outflow  (fraction of average discharge, [-])
#MinOutflowQ = 0.2
NormalOutflowQ = 1.0
NonDamagingOutflowQ = 4.0
#Reservoir_releases = $(PathLakesRes)/reservoirOperations_Ebro.nc
#-------------------------------------------------------
[INFLOW]
#-------------------------------------------------------

# if option inflow = true
# the inflow from outside is added at inflowpoints
In_Dir = $(FILE_PATHS:PathRoot)/in

# nominal map with locations of (measured)inflow hydrographs [cu m / s]
InflowPoints = $(In_Dir)/in.map
#InflowPoints = 8.25 49.75 7.75 50.25

# if InflowPoints is a map, this flag is to identify if it is global (False) or local (True)
# observed or simulated input hydrographs as time series [cu m / s]
# Note: that identifiers in time series have to correspond to InflowPoints
# can be several timeseries in one file or different files e.g. main.tss mosel.tss
#QInTS = main1.tss mosel1.tss
QInTS = mm.tss



#-------------------------------------------------------
[ENVIRONMENTALFLOW]
#-------------------------------------------------------

# Either calculate without run with predone discharge (set calc_ef_after = False)
calc_ef_after = True
# Or calculate after run (set calc_ef_after = False) and defining the file to be used
EFDis = $(FILE_PATHS:PathOut)/discharge_rhine.nc
# if predone discharge, do the maps need to be cut to fit to the mask?
cut_ef_map = False


# MAF: Mean, Q90: percentile 90, MMF: monthly average, MQ90: monthly Q90 9averagwed over al Jan, Feb..
# EF_VMF: Environmental flow - variable monthly flow, EF_VMF_LIH - EF- variable monthly flow, high intermediate, low class
OUT_Dir = $(FILE_PATHS:PathOut)
#OUT_MAP_Once = MAF, Q90
#OUT_MAP_12month = MMF, MQ90, EF_VMF, EF_VMF_LIH
#OUT_MAP_12month = MQ90, EF_VMF



#+++++++++++++++++++++++++++++++++++++++++++++++++++++++
#+++++++++++++++++++++++++++++++++++++++++++++++++++++++


[OUTPUT]
OUT_Dir = $(FILE_PATHS:PathOut)

#OUT_MAP_Daily = abstractedLakeReservoirM3, Rain, Snow, IceMelt, SnowMelt, snowEvap, iceEvap, act_nonpaddyConsumption, act_paddyConsumption, act_livConsumption, returnflowIrr, returnflowNonIrr, GW_Irrigation, Res_Irrigation, Lake_Irrigation, Channel_Irrigation, Lift_Irrigation,GW_Industry, GW_Livestock, GW_Domestic, Res_Industry, Res_Livestock, Res_Domestic, Lake_Industry, Lake_Livestock, Lake_Domestic, Channel_Domestic, Channel_Livestock, Channel_Industry, Lift_Industry, Lift_Livestock, Lift_Domestic, prefFlow_GW, perc3toGW_GW, lakeResInflowM, lakeResOutflowM, act_indConsumption, act_domConsumption, act_livConsumption, act_irrWithdrawal, act_nonIrrWithdrawal, act_domWithdrawal, act_indWithdrawal, act_livWithdrawal, snowEvap, capillar, baseflow, actTransTotal_forest, actTransTotal_grasslands, actTransTotal_paddy, actTransTotal_nonpaddy, unmet_lost, unmetDemand, pot_GroundwaterAbstract, storGroundwater, discharge, nonFossilGroundwaterAbs, Precipitation, totalET, EvapoChannel, EvapWaterBodyM, act_nonIrrConsumption, channelStorage, lakeResStorage, totalSto, sum_actTransTotal, sum_actBareSoilEvap, sum_interceptEvap, sum_openWaterEvap, addtoevapotrans, lakeResInflowM, act_bigLakeResAbst, sum_gwRecharge, sum_capRiseFromGW, act_totalIrrConsumption, sum_runoff, returnFlow, act_SurfaceWaterAbstract, dis_outlet, act_irrNonpaddyWithdrawal,  totalIrrDemand, irrPaddyDemand, irrNonpaddyDemand, EWRef, ETRef
#OUT_MAP_Daily = EWRef, ETRef, Res_Irrigation, Lake_Irrigation, Channel_Irrigation, Lift_Irrigation
OUT_MAP_Daily = Res_Irrigation, Lake_Irrigation, Channel_Irrigation, Lift_Irrigation
#OUT_MAP_Daily = discharge, lakeResStorage, lakeResInflowM, lakeResOutflowM, abstractedLakeReservoirM3, Res_Irrigation, Channel_Irrigation, Lift_Irrigation, totalIrrDemand, irrPaddyDemand, irrNonpaddyDemand
#OUT_MAP_Monthtot = discharge, lakeResInflowM, lakeResOutflowM, act_bigLakeResAbst, EvapWaterBodyM, abstractedLakeReservoirM3
#OUT_MAP_TotalEnd = cellArea, resVolume, waterBodyID, reservoir_command_areas
#OUT_MAP_TotalEnd = cellArea, resVolume, waterBodyID, reservoir_command_areas

OUT_TSS_Daily = discharge,lakeResInflowM, lakeResOutflowM, act_bigLakeResAbst, EvapWaterBodyM, abstractedLakeReservoirM3,lakeResStorage, reservoirStorage
#OUT_TSS_MonthAvg = discharge
OUT_TSS_Monthtot = discharge, lakeResInflowM, lakeResOutflowM, act_bigLakeResAbst, EvapWaterBodyM, abstractedLakeReservoirM3
OUT_TSS_MonthEnd = lakeResStorage, reservoirStorage
